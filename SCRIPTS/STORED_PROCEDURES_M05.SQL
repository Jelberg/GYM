--DROPS DE LAS FUNCIONES
drop function FOM05_llenar_duracion();



--*********************FUNCIONES PARA LOS TRIGGERS

CREATE OR REPLACE FUNCTION FOM05_LLENAR_DURACION() 
RETURNS TRIGGER AS $$

DECLARE 
HORA_INICIO TIME;
HORA_FIN TIME;
HORA	 TIME;
ID 	 INTEGER;

BEGIN

	SELECT HC_ID, HC_HORA_INICIO, HC_HORA_FIN INTO ID, HORA_INICIO, HORA_FIN
	FROM HORARIO_CLASE ORDER BY HC_ID DESC LIMIT 1; 
 
	HORA = HORA_FIN - HORA_INICIO;
	
	UPDATE HORARIO_CLASE SET HC_DURACION=HORA WHERE HC_ID=ID;
	
	RETURN NEW;
END $$ 
language plpgsql

--******FUNCIONES QUE SE NECESITAN PARA EL WEB SERVICE****

--consultar toda la tabla de horario_clase en rango de 1 semana (entre lunes y sabado)
--consultar tabla de horario de clase que ya se halla participado para los comentarios

--AGREGAR USUARIO PARA QUE PARTICIPE EN LA CLASE
CREATE OR REPLACE FUNCTION M05_AGREGAR_PARTICIPACION(ID_USUARIO INTEGER, ID_HC INTEGER)
RETURNS VOID AS $$
DECLARE 
BEGIN 
	UPDATE HORARIO_CLASE 
	SET FK_USUARIO=ID_USUARIO 
	WHERE HC_ID = ID_HC ;
END $$
LANGUAGE PLPGSQL;

--ELIMINAR USUARIO DE LA PARTICIPACION
CREATE OR REPLACE FUNCTION M05_ELIMINAR_PARTICIPACION(ID_USUARIO INT, ID_CLASE_HORARIO INT)
RETURNS VOID AS $$
DECLARE 
BEGIN 
	UPDATE HORARIO_CLASE SET FK_USUARIO=NULL WHERE FK_USUARIO=ID_USUARIO AND HC_ID=ID_CLASE_HORARIO;
END $$
LANGUAGE PLPGSQL;

--AGREGAR CRITICA A LA CLASE 
CREATE OR REPLACE FUNCTION M05_AGREGAR_CRITICA(FECHA DATE, COMENTARIO CHARACTER VARYING(400),VALORACION INT, REFERENCIA_HC INT)
RETURNS VOID AS $$
DECLARE 
BEGIN 
	INSERT INTO CRITICA(CRI_FECHA,CRI_COMENTARIO,CRI_VALORACION,FK_HC_ID) VALUES (FECHA,COMENTARIO,VALORACION,REFERENCIA_HC);
END $$
LANGUAGE PLPGSQL;

--ELIMINAR CRITICA 
CREATE OR REPLACE FUNCTION M05_ELIMINAR_CRITICA(ID_CRITICA INT)
RETURNS VOID AS $$
DECLARE 
BEGIN 
	DELETE FROM CRITICA WHERE CRI_ID=ID_CRITICA;
END $$
LANGUAGE PLPGSQL;


--**********FUNCIONES PARA CRITICA*******
CREATE OR REPLACE FUNCTION FOM05_LISTA_CRITICAS() 
RETURNS TABLE (id int, fecha Date, comentario varchar ,valoracion int, referencia int ) AS
$$
DECLARE 
var_r record;
BEGIN
for var_r in (Select * from CRITICA)

loop
	id:= var_r.CRI_ID;
	fecha:= var_r.CRI_FECHA;
	comentario:= var_r.CRI_COMENTARIO;
	valoracion:= var_r.CRI_VALORACION;
	referencia:= var_r.FK_HC_ID;
	
end loop;
	return next;
	
END 
$$ 
language plpgsql