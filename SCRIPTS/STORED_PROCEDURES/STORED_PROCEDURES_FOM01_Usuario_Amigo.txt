--------------Función que devuelve la lista de amigos de un usuario.

CREATE OR REPLACE FUNCTION fo_m01_get_usuario_amigo(idUsuario int)
  RETURNS TABLE(nombre character varying, apellido character varying, usuario 				character varying, correo character varying)
   AS $$
DECLARE
   var_r    record;
BEGIN
   FOR var_r IN(SELECT usu_nombre, usu_apellido, usu_usuario, usu_correo
        FROM usuario, usuario_amigo
        WHERE ami_usuario = idUsuario and  ami_amigo = usu_id)
   LOOP
    nombre = var_r.usu_nombre;
    apellido = var_r.usu_apellido;
    usuario = var_r.usu_usuario;
    correo = var_r.usu_correo;
    RETURN NEXT;
   END LOOP;
END; $$
  LANGUAGE plpgsql;

----------------------------Función que agrega un amigo.

CREATE OR REPLACE FUNCTION fo_m01_inserta_usuario_amigo(idUsuario int, idAmigo int)
RETURNS VOID AS $$
DECLARE 
BEGIN 
	INSERT INTO USUARIO_AMIGO (ami_Usuario,ami_Amigo) VALUES ( idUsuario, idAmigo);
END $$
  LANGUAGE plpgsql;

----------------------------Función que elimina un amigo.

CREATE OR REPLACE FUNCTION fo_m01_elimina_usuario_amigo(idUsuario int, idAmigo int)
RETURNS VOID AS $$
DECLARE 
BEGIN 
	DELETE FROM USUARIO_AMIGO WHERE ami_usuario = idUsuario and 								ami_amigo = idAmigo;
END $$
  LANGUAGE plpgsql;