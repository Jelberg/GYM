--*********************FUNCIONES PARA LOS TRIGGERS*******************************

CREATE OR REPLACE FUNCTION LLENAR_DURACION() 
RETURNS TRIGGER AS $$

DECLARE 
HORA_INI TIME;
HORA_FIN TIME;
HORA	 TIME;
DURACION TIME;
ID 	 INTEGER;

BEGIN

	SELECT HC_ID,HC_HORA_INICIO, HC_HORA_FIN INTO ID, HORA_INI, HORA_FIN
	FROM HORARIO_CLASE ORDER BY HC_ID DESC LIMIT 1; 
 
	HORA = HORA_FIN - HORA_INICIO;

	UPDATE HORARIO_CLASE SET HC_DURACION=HORA WHERE HC_ID=ID;
END $$ 
language plpgsql;

--***************FUNCIONES QUE SE NECESITAN PARA EL WEB SERVICE********************

--consultar toda la tabla de horario_clase en rango de 1 semana (entre lunes y sabado)
--consultar tabla de horario de clase que ya se halla participado para los comentarios

--agregar usuario a la tabla horario clase que seria la participacion
CREATE OR REPLACE FUNCTION M05_AGREGAR_PARTICIPACION(ID_USUARIO INT, ID_CLASE_HORARIO INT)
RETURNS VOID AS $$
DECLARE 
BEGIN 
	UPDATE HORARIO_CLASE SET FK_USUARIO=ID_USUARIO WHERE HC_ID=ID_CLASE_HORARIO;
END $$
LANGUAGE PLPGSQL;

--eliminar usuario de la tabla horario, restriccion tiene que ser que la fecha aun no halla pasado
CREATE OR REPLACE FUNCTION M05_ELIMINAR_PARTICIPACION(ID_USUARIO INT, ID_CLASE_HORARIO INT)
RETURNS VOID AS $$
DECLARE 
BEGIN 
	UPDATE HORARIO_CLASE SET FK_USUARIO=NULL WHERE FK_USUARIO=ID_USUARIO AND HC_ID=ID_CLASE_HORARIO;
END $$
LANGUAGE PLPGSQL;

--agregar comentario y/o valoracion, es independiente ya que se encuentran ambos como atributo de tabla critica
CREATE OR REPLACE FUNCTION M05_AGREGAR_CRITICA(FECHA DATE, COMENTARIO CHARACTER VARYING(400),VALORACION INT, REFERENCIA_HC INT)
RETURNS VOID AS $$
DECLARE 
BEGIN 
	INSERT INTO CRITICA(CRI_FECHA,CRI_COMENTARIO,CRI_VALORACION,FK_HC_ID) VALUES (FECHA,COMENTARIO,VALORACION,REFERENCIA_HC);
END $$
LANGUAGE PLPGSQL;

--eliminar comentario y/o valoracion 
CREATE OR REPLACE FUNCTION M05_ELIMINAR_CRITICA(ID_CRITICA INT)
RETURNS VOID AS $$
DECLARE 
BEGIN 
	DELETE FROM CRITICA WHERE CRI_ID=ID_CRITICA;
END $$
LANGUAGE PLPGSQL;
